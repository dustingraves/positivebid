.container
  %ul.breadcrumb
    %li
      %a(href="/home") Home
      %span.divider &rarr;
    %li
      %a(href="/home/auctions") Auctions
      %span.divider &rarr;
    %li
      %a{:href => home_auction_path(@auction)}= truncate @auction.name
      %span.divider &rarr;
    %li
      %a{:href => resources_path} Lots
      %span.divider &rarr;
    %li.active
      #{resource.number}: #{truncate resource.name}
      %span.divider &rarr;
    %li
      %a{:href => resource_items_path} Items for Lot

  .well
    This Lot is detailed below. To add Items to this Lot click the 
    %em Items for Lot
    link above.

  %h4 Lot:
  %h1 #{resource.number} - #{resource.name.titleize}

  - if resource.state == "draft"
    .alert.alert-success
      %p
        This Lot is currently in a 
        %strong draft
        state.
      %p
        Please continue to set up your lot by adding
        at least one
        %strong item 
        to it by clicking on the blue
        %em Items for Lot
        link above.
      %p
        The Lot will not appear 
        on our bidding site until you publish it by
        clicking the 
        %b Organiser Publish Lot
        button below.

  %p  
    %a.btn.btn-small{:href => edit_resource_path} Edit
    - resource.state_events.each do |event|
      - if event.to_s.match(/^organiser/)
        %a.btn.btn-small.btn-success{:href => resource_path(resource, 'lot[state_event]' => event ), 'data-method' => 'PUT'} #{event.to_s.humanize}
        = helplink("lot_#{event.to_s}")
    %a.btn.btn-small.btn-danger.right{:href => resource_path, 'data-confirm' => 'Are you sure you want to delete the Lot? really sure?', 'data-method' => :delete } Delete Lot

  %table.table.table-striped.table-bordered
    - for column in  [ :number, :name, :position, :min_increment ]
      %tr
        %th= column.to_s.humanize
        %td
          - if column.to_s.match(/_at$/)
            = resource.send(column).try(:to_s, :long)
          - else
            = resource.send(column)
    - for column in  [ :sale_start_at, :sale_end_at, :actual_start_at, :actual_end_at, :paid_at ]
      - if resource.send(column).present?
        %tr
          %th= column.to_s.humanize
          %td
            - if column.to_s.match(/_at$/)
              = resource.send(column).try(:to_s, :long)
            - else
              = resource.send(column)
    - if resource.cents_paid != 0
      %tr
        %th Cents Paid
        %td #{resource.cents_paid}
    %tr
      %th Lot State
      %td
        - resource.class::STATES.each do |s|
          - if resource.state == s
            %strong #{resource.state} 
          - else
            #{s}
          \- #{resource.class::STATE_DESCRIPTIONS[s]}
          %br
    %tr
      %th Log
      %td.log #{resource.log}





